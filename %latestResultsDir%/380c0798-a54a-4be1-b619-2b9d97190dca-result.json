{"name": "test_case_01", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF71B873E52+31618]\n\t(No symbol) [0x00007FF71B7EB0B9]\n\t(No symbol) [0x00007FF71B6A888A]\n\t(No symbol) [0x00007FF71B6F8524]\n\t(No symbol) [0x00007FF71B6F862C]\n\t(No symbol) [0x00007FF71B73F787]\n\t(No symbol) [0x00007FF71B71D14F]\n\t(No symbol) [0x00007FF71B73CA80]\n\t(No symbol) [0x00007FF71B71CEB3]\n\t(No symbol) [0x00007FF71B6EA46B]\n\t(No symbol) [0x00007FF71B6EB001]\n\tGetHandleVerifier [0x00007FF71BB7A02D+3202397]\n\tGetHandleVerifier [0x00007FF71BBC6A4D+3516285]\n\tGetHandleVerifier [0x00007FF71BBBC4C0+3473904]\n\tGetHandleVerifier [0x00007FF71B925D56+760454]\n\t(No symbol) [0x00007FF71B7F6B5F]\n\t(No symbol) [0x00007FF71B7F1CF4]\n\t(No symbol) [0x00007FF71B7F1E82]\n\t(No symbol) [0x00007FF71B7E122F]\n\tBaseThreadInitThunk [0x00007FFDA8DF7344+20]\n\tRtlUserThreadStart [0x00007FFDA91DCC91+33]", "trace": "request = <SubRequest 'setup_teardown' for <Function test_case_01>>\n\n    @pytest.fixture(scope=\"function\")\n    def setup_teardown(request):\n    \n        options = webdriver.ChromeOptions()\n        options.use_chromium = True\n    \n        options.add_experimental_option(\"prefs\",{\"download.default.directory\":DOWNLOAD_DIR})\n        options.add_argument(\"download.prompt_for_download=false\")\n    \n        driver = webdriver.Chrome(options=options)\n    \n        # Set implicit wait\n        driver.implicitly_wait(10)\n    \n        driver.get(site_url)\n        driver.maximize_window()\n        request.cls.driver = driver\n    \n        login_page = LoginPage(driver)\n        home_page = Homepage(driver)\n    \n        wait = WebDriverWait(driver, 30)\n    \n        decoded_username = decode(username)\n        decoded_password = decode(password)\n    \n>       wait.until(expected_conditions.visibility_of_element_located(login_page.username_input_field))\n\nsrc\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e877443cf1fc23fcb6ec9a6496a7b10a\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000228C4C231A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF71B873E52+31618]\nE       \t(No symbol) [0x00007FF71B7EB0B9]\nE       \t(No symbol) [0x00007FF71B6A888A]\nE       \t(No symbol) [0x00007FF71B6F8524]\nE       \t(No symbol) [0x00007FF71B6F862C]\nE       \t(No symbol) [0x00007FF71B73F787]\nE       \t(No symbol) [0x00007FF71B71D14F]\nE       \t(No symbol) [0x00007FF71B73CA80]\nE       \t(No symbol) [0x00007FF71B71CEB3]\nE       \t(No symbol) [0x00007FF71B6EA46B]\nE       \t(No symbol) [0x00007FF71B6EB001]\nE       \tGetHandleVerifier [0x00007FF71BB7A02D+3202397]\nE       \tGetHandleVerifier [0x00007FF71BBC6A4D+3516285]\nE       \tGetHandleVerifier [0x00007FF71BBBC4C0+3473904]\nE       \tGetHandleVerifier [0x00007FF71B925D56+760454]\nE       \t(No symbol) [0x00007FF71B7F6B5F]\nE       \t(No symbol) [0x00007FF71B7F1CF4]\nE       \t(No symbol) [0x00007FF71B7F1E82]\nE       \t(No symbol) [0x00007FF71B7E122F]\nE       \tBaseThreadInitThunk [0x00007FFDA8DF7344+20]\nE       \tRtlUserThreadStart [0x00007FFDA91DCC91+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "start": 1718432646402, "stop": 1718432646402, "uuid": "e4db7730-e576-49a7-859b-8e83d2e9bb0f", "historyId": "da8a131242ee5a40dd67ae6ebe4a3496", "testCaseId": "da8a131242ee5a40dd67ae6ebe4a3496", "fullName": "src.tests.smoke.test_case_01.Test_case_01#test_case_01", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_teardown')"}, {"name": "parentSuite", "value": "src.tests.smoke"}, {"name": "suite", "value": "test_case_01"}, {"name": "subSuite", "value": "Test_case_01"}, {"name": "host", "value": "DESKTOP-K272ERD"}, {"name": "thread", "value": "13544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.tests.smoke.test_case_01"}]}